"""init

Revision ID: d2aba4cb1fff
Revises: 
Create Date: 2025-05-13 23:52:43.037931

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd2aba4cb1fff'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklisttokens',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('expire', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blacklisttokens_id'), 'blacklisttokens', ['id'], unique=False)
    op.create_table('teams',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('pool', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_teams_id'), 'teams', ['id'], unique=False)
    op.create_table('user',
    sa.Column('user_uuid', sa.Uuid(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=255), nullable=True),
    sa.Column('firstname', sa.String(length=255), nullable=True),
    sa.Column('middlename', sa.String(length=255), nullable=True),
    sa.Column('lastname', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.PrimaryKeyConstraint('user_uuid'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_user_uuid'), 'user', ['user_uuid'], unique=False)
    op.create_table('user_teams',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('team_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('invited', 'accepted', 'rejected', name='invitestatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.PrimaryKeyConstraint('id', 'user_id', 'team_id'),
    sa.UniqueConstraint('user_id', 'team_id')
    )
    op.create_index(op.f('ix_user_teams_id'), 'user_teams', ['id'], unique=False)
    op.create_index(op.f('ix_user_teams_team_id'), 'user_teams', ['team_id'], unique=False)
    op.create_index(op.f('ix_user_teams_user_id'), 'user_teams', ['user_id'], unique=False)
    op.create_table('board',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.user_uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_board_id'), 'board', ['id'], unique=False)
    op.create_table('board_participant',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('board_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role', sa.Enum('owner', 'editor', 'viewer', name='role'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['board.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('board_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('board_participant')
    op.drop_index(op.f('ix_board_id'), table_name='board')
    op.drop_table('board')
    op.drop_index(op.f('ix_user_teams_user_id'), table_name='user_teams')
    op.drop_index(op.f('ix_user_teams_team_id'), table_name='user_teams')
    op.drop_index(op.f('ix_user_teams_id'), table_name='user_teams')
    op.drop_table('user_teams')
    op.drop_index(op.f('ix_user_user_uuid'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_teams_id'), table_name='teams')
    op.drop_table('teams')
    op.drop_index(op.f('ix_blacklisttokens_id'), table_name='blacklisttokens')
    op.drop_table('blacklisttokens')
    # ### end Alembic commands ###
