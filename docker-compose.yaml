x-postgres-environment-vars: &env-vars
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
  POSTGRES_HOST: db
  POSTGRES_NAME: postgres
  POSTGRES_PORT: 5432
  CORS_ORIGINS: '["http://89.104.68.136:5173"]'


services:
  nginx:
    image: nginx
    container_name: nginx
#    network_mode: host

    ports:
      - "8080:80"
    depends_on:
      - db
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#    command: [ nginx-debug, '-g', 'daemon off;' ]
    profiles:
      - 'all'
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=redis
  pgadmin:
    image: 'docker.io/dpage/pgadmin4:latest'
    environment:
      PGADMIN_DEFAULT_EMAIL: "asd@asd.ru"
      PGADMIN_DEFAULT_PASSWORD: "asdasdasd"
    ports:
      - 15080:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin/
  db:
    image: postgres:15
    container_name: db
    restart: always
    ports:
      - 5432:5432
    environment:
      <<: *env-vars
    volumes:
      - postgres-data:/var/lib/postgresql/data
    profiles:
      - 'all'
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - 'all'






  auth:
    depends_on:
      - db
    build:
      context: .
      dockerfile: docker_iternal/dev.Dockerfile
      network: host
      args:
        REQ_PATH: ./auth/requirements.txt
    ports:
      - 8001:8001
    environment:
      <<: *env-vars
    command: ["uvicorn", "auth.run_web:app", "--host", "0.0.0.0", "--port", "8001"]

    develop:
      watch:
        - action: rebuild
          path: ./auth
          target: /app/auth
        - action: rebuild
          path: ./common
          target: /app/common
        - action: rebuild
          path: ./db
          target: /app/db
        - action: rebuild
          path: ./auth/requirements.txt
    profiles:
      - 'all'

  boards:
    depends_on:
      - db
    build:
      context: .
      dockerfile: docker_iternal/dev.Dockerfile
      network: host
      args:
        REQ_PATH: ./boards/requirements.txt
    ports:
      - 8002:8002
    environment:
      <<: *env-vars
    command: [ "uvicorn", "boards.run_web:app", "--host", "0.0.0.0", "--port", "8002" ]
    develop:
      watch:
        - action: rebuild
          path: ./boards
          target: /app/boards
        - action: rebuild
          path: ./common
          target: /app/common
        - action: rebuild
          path: ./db
          target: /app/db
        - action: rebuild
          path: ./boards/requirements.txt
    profiles:
      - 'all'
  collab:
    depends_on:
      - db
    build:
      context: .
      dockerfile: docker_iternal/dev.Dockerfile
      network: host
      args:
        REQ_PATH: ./collab/requirements.txt
    ports:
      - 8003:8003
    environment:
      <<: *env-vars
    command: [ "uvicorn", "collab.run_web:app", "--host", "0.0.0.0", "--port", "8003" ]

    develop:
      watch:
        - action: rebuild
          path: ./collab
          target: /app/collab
        - action: rebuild
          path: ./common
          target: /app/common
        - action: rebuild
          path: ./db
          target: /app/db
        - action: rebuild
          path: ./collab/requirements.txt
    profiles:
      - 'all'
  canvas:
    build:
      context: .
      dockerfile: docker_iternal/canvas.Dockerfile
    depends_on:
      - db
      - redis
    ports:
      - 8004:8004
    develop:
      watch:
        - action: sync
          path: ./canvas
          target: /app
    profiles:
      - 'all'

  migrations:
#    depends_on:
#      - db
    build:
      context: .
      dockerfile: docker_iternal/migrations.Dockerfile
      network: host
    environment:
      <<: *env-vars



volumes:
  postgres-data:
    driver: local
  redis_data:
    driver: local
  pgadmin-data:
    driver: local




networks:
  default:
    driver: bridge

